import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.assertEquals;

public class MinimumCostToConnectSticksTest {
    MinimumCostToConnectSticks mctcs = new MinimumCostToConnectSticks();

    @Test
    public void testExample1() {
        assertEquals(14, mctcs.connectSticks(new int[]{2,4,3}));
    }

    @Test
    public void testExample2() {
        assertEquals(30, mctcs.connectSticks(new int[]{1,8,3,5}));
    }

    @Test
    public void testExample3() {
        assertEquals(0, mctcs.connectSticks(new int[]{5}));
    }

    @Test
    public void testExample4() {
        assertEquals(22256365, mctcs.connectSticks(new int[]{4794,2437,1797,8904,5654,9440,8796,4791,2778,2438,9087,3985,7424,5548,7137,5653,2154,6586,6524,1131,6045,3603,2733,6915,550,2534,3465,5580,2202,6642,6714,8685,4428,9713,3600,3287,5164,1830,2354,9998,3167,335,7474,1552,6003,9385,9759,5811,6361,7739,3390,2555,742,7534,8312,8264,5535,911,5199,650,6813,1701,9753,1183,2220,6890,111,8427,5291,3899,8264,1139,8532,1529,9033,8051,1779,725,5722,2229,1187,9538,2989,3475,2305,5134,8278,3382,5683,6852,2504,764,4834,6163,3126,9490,195,453,5368,9603,9947,3129,4497,6764,5768,8155,4332,9925,8450,8187,6287,7070,178,9049,5442,5774,5067,3309,4729,5631,7028,268,1548,263,8546,5561,9590,8166,5338,871,757,5093,5697,1692,8663,8284,8646,9694,4515,5283,2532,1457,138,322,9556,5126,1351,8294,5593,5532,7272,7648,5952,8969,3389,3378,3537,4710,3733,7236,4598,5737,4407,280,6262,7039,9775,1149,7867,7401,4463,1847,790,2393,2273,335,531,4501,9986,8516,6640,5278,5971,7957,7264,8231,7230,7890,8586,8239,3470,8079,9283,1889,5826,1902,8210,5871,2743,7506,2906,4526,7428,1575,1436,1269,5590,2360,5652,9369,4775,2066,3366,3772,6803,3579,4972,8414,8867,5233,3771,4701,2433,4578,5759,7036,1581,9011,3106,8426,8969,7330,9857,5011,6692,1717,6409,3913,6840,1144,9025,9655,7277,6229,5768,4223,886,4565,9595,4746,506,3382,4801,1162,6690,1500,7470,969,4387,5283,1895,3276,5889,4734,221,4313,7241,461,698,263,184,4540,9414,7492,2191,4098,1059,4301,7127,3575,5806,1702,4303,449,3216,9347,9848,1879,5486,718,6482,6881,4249,387,9127,5267,7928,7489,8559,1237,9831,3504,7487,3373,1724,9191,7446,409,2970,7297,5842,2835,2690,5235,7663,4288,9474,4738,5809,4853,1871,6256,7517,6236,8830,7228,8896,8657,482,6393,1974,9767,8343,4273,5225,7282,5572,2346,4293,2493,3343,426,9304,4604,771,8294,3166,6585,2685,6080,9080,4297,1551,5810,4649,8834,7041,2395,6268,8268,6856,4282,3013,6690,676,1031,8846,4394,8582,5815,21,2766,3861,1432,2464,3931,423,6936,1191,9056,7540,1697,4668,16,7984,1108,4156,436,6428,2758,584,9825,3389,5059,5429,9351,8717,5162,7199,4670,2769,2345,4607,7183,4777,7089,6100,216,4381,8886,7355,9806,7386,8338,7748,4499,185,3104,5229,9140,7058,559,5295,8104,4717,4813,7754,1813,9420,2786,8518,5377,1564,2175,5230,9577,2423,2413,9725,6723,2944,6879,4202,4603,5756,4786,995,5304,9429,1369,2392,2131,9018,6297,7262,2917,6260,1997,4122,5825,819,5545,5237,8207,777,5724,9003,6871,3946,3788,6087,3907,8033,3520,4101,3860,5169,4025,7925,7096,9463,8832,7679,2244,6831,7684,8987,4490,2079,8813,8623,7790,5840,4573,3930,5007,2770,9101,2811,9686}));
    }
}
